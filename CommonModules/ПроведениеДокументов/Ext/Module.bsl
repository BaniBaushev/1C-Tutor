#Область ПрограммныйИнтерфейс  

Процедура ИнициализироватьДополнительныеСвойстваДляПроведения(ДокументСсылка, ДополнительныеСвойства) Экспорт
	
	// В структуре "ДополнительныеСвойства" создаются свойства с ключами "ТаблицыДляДвижений", "ДляПроведения",
	// "УчетнаяПолитика".
	
	// "ТаблицыДляДвижений" - структура, которая будет содержать таблицы значений с данными для выполнения движений.
	ДополнительныеСвойства.Вставить("ТаблицыДляДвижений", Новый Структура);
	
	// "ДляПроведения" - структура, содержащая свойства и реквизиты документа, необходимые для проведения.
	ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
	
	// Структура с ключом "МенеджерВременныхТаблиц", в значении которого хранится менеджер временных таблиц.
	// Содержит для каждой временной таблицы ключ - имя временной таблицы
	// и значение - признак наличия записей во временной таблице.
	ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы",
		Новый Структура("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц));
	ДополнительныеСвойства.ДляПроведения.Вставить("МетаданныеДокумента", ДокументСсылка.Метаданные());
	
	ЗаполнитьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства);
	
	// Определение и установка значения момента, на который должен быть выполнен контроль документа.
	ДополнительныеСвойства.ДляПроведения.Вставить("МоментКонтроля", '00010101');
	ДополнительныеСвойства.ДляПроведения.Вставить("ПериодКонтроля", '39991231');
		
КонецПроцедуры

Процедура ПодготовитьНаборыЗаписейКРегистрацииДвижений(ДокументОбъект) Экспорт
	
	Для каждого НаборЗаписей Из ДокументОбъект.Движения Цикл
		
		Если ТипЗнч(НаборЗаписей) = Тип("КлючИЗначение") Тогда
			
			НаборЗаписей = НаборЗаписей.Значение;
			
		КонецЕсли;
		
		Если НаборЗаписей.Количество() > 0 Тогда
			
			НаборЗаписей.Очистить();
			
		КонецЕсли;
		
	КонецЦикла;
	
	ИменаИспользуемыхРегистров = ИменаИспользуемыхРегистров(ДокументОбъект.Ссылка,
		ДокументОбъект.ДополнительныеСвойства.ДляПроведения.МетаданныеДокумента);
	
	Для Каждого ИмяРегистра Из ИменаИспользуемыхРегистров Цикл
		ДокументОбъект.Движения[ИмяРегистра].Записывать = Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтразитьДвижения(ИмяРегистра, ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТаблицы = СтрШаблон("Таблица%1", ИмяРегистра);
	
	Если ТаблицыДляДвижений[ИмяТаблицы].Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движения[ИмяРегистра].Записывать = Истина;
	Движения[ИмяРегистра].Загрузить(ТаблицыДляДвижений[ИмяТаблицы]);
	
КонецПроцедуры

Процедура ЗаписатьНаборыЗаписей(ДокументОбъект) Экспорт
	
	Для каждого НаборЗаписей Из ДокументОбъект.Движения Цикл
		
		Если ТипЗнч(НаборЗаписей) = Тип("КлючИЗначение") Тогда
			
			НаборЗаписей = НаборЗаписей.Значение;
			
		КонецЕсли;
		
		Если НаборЗаписей.Записывать Тогда
			
			Если НЕ НаборЗаписей.ДополнительныеСвойства.Свойство("ДляПроведения") Тогда
				
				НаборЗаписей.ДополнительныеСвойства.Вставить("ДляПроведения", Новый Структура);
				
			КонецЕсли;
			
			Если НЕ НаборЗаписей.ДополнительныеСвойства.ДляПроведения.Свойство("СтруктураВременныеТаблицы") Тогда
				
				НаборЗаписей.ДополнительныеСвойства.ДляПроведения.Вставить("СтруктураВременныеТаблицы",
					ДокументОбъект.ДополнительныеСвойства.ДляПроведения.СтруктураВременныеТаблицы);
				Если ДокументОбъект.ДополнительныеСвойства.Свойство("РежимЗаписи") Тогда
					НаборЗаписей.ДополнительныеСвойства.ДляПроведения.Вставить("РежимЗаписи",
						ДокументОбъект.ДополнительныеСвойства.РежимЗаписи);
				КонецЕсли;
			КонецЕсли;
			
			НаборЗаписей.Записать();
			НаборЗаписей.Записывать = Ложь;
						
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

Процедура ЗаполнитьДанныеДокумента(ДокументСсылка, ДополнительныеСвойства)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.Номер КАК Номер,
	|	ТаблицаДокумента.Дата КАК Дата,
	|	ТаблицаДокумента.МоментВремени КАК МоментВремени,
	|	НЕОПРЕДЕЛЕНО КАК ВидОперации,
	|	ЗНАЧЕНИЕ(Справочник.СтраныМира.ПустаяСсылка) КАК СтранаРегистрации,
	|	ТаблицаДокумента.Представление КАК Представление
	|ИЗ
	|	&ИмяТаблицыДокумента КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &ДокументСсылка");
	
	
	ИмяТаблицыДокумента = ОбщегоНазначения.ИмяТаблицыПоСсылке(ДокументСсылка);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ИмяТаблицыДокумента", ИмяТаблицыДокумента);
	
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// Формирование ключей, содержащих данные документа.
	Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
		ДополнительныеСвойства.ДляПроведения.Вставить(Колонка.Имя);
	КонецЦикла;
	
	ВыборкаИзРезультатаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаИзРезультатаЗапроса.Следующий();
	
	// Заполнение значений для ключей, содержащих данные документа.
	ЗаполнитьЗначенияСвойств(ДополнительныеСвойства.ДляПроведения, ВыборкаИзРезультатаЗапроса);
		
КонецПроцедуры

Функция ИменаИспользуемыхРегистров(Регистратор, МетаданныеДокумента)

	Результат = Новый Массив;
	СчетчикЦикла = 0;
	ВсегоРегистров = МетаданныеДокумента.Движения.Количество();
	ЗапросыКДвижениям = Новый Массив;
	ОбъединитьВсе = "
					|ОБЪЕДИНИТЬ ВСЕ
					|";

	Для Каждого Движение Из МетаданныеДокумента.Движения Цикл

		СчетчикЦикла = СчетчикЦикла + 1;

		ТекстЗапросаДвижение = ТекстЗапросаДвижение(Движение.Имя, Движение.ПолноеИмя());
		ЗапросыКДвижениям.Добавить(ТекстЗапросаДвижение);

		Если ЗапросыКДвижениям.Количество() = 256 Или СчетчикЦикла = ВсегоРегистров Тогда

			ТекстЗапроса = СтрСоединить(ЗапросыКДвижениям, ОбъединитьВсе);
			ЗапросыКДвижениям.Очистить();
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("Регистратор", Регистратор);

			ДополнитьРезультатИменаИспользуемыхРегистров(Результат, Запрос);

		КонецЕсли;

	КонецЦикла;

	Возврат Результат;

КонецФункции 

Функция ТекстЗапросаДвижение(ИмяРегистра, ИмяТаблицы)

	Результат = СтрШаблон(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	""%1"" КАК ИмяРегистра
	|ИЗ
	|	&ИмяТаблицы КАК Т
	|ГДЕ
	|	Т.Регистратор = &Регистратор", ИмяРегистра);

	Возврат СтрЗаменить(Результат, "&ИмяТаблицы", ИмяТаблицы);

КонецФункции

Процедура ДополнитьРезультатИменаИспользуемыхРегистров(Результат, Запрос)

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Выборка.ИмяРегистра);
	КонецЦикла;

КонецПроцедуры
