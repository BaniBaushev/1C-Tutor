Процедура ПолучитьДанные(Параметры, ВременноеХранилищеРезультата) Экспорт
	
	Результат = Новый Структура;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат.Вставить("Показатели", РассчитатьПоказатели(Параметры));
	Если Параметры.Свойство("Секция") Тогда
		Результат.Вставить("Секция", Параметры.Секция);
	Иначе
		Результат.Вставить("Секция", "");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ПоместитьВоВременноеХранилище(Результат, ВременноеХранилищеРезультата);
	
КонецПроцедуры 

Функция РассчитатьПоказатели(Параметры)
	
	Результат = Новый Соответствие;
	Запрос = Новый Запрос;
	Для каждого ОписаниеПоказателя Из Параметры.Показатели Цикл
		Если Параметры.Свойство("Секция") И
			((Параметры.Секция="Остатки" И НЕ ОписаниеПоказателя.Остаток) ИЛИ
			(Параметры.Секция="Обороты" И ОписаниеПоказателя.Остаток)) Тогда
			Продолжить;
		КонецЕсли; 
		Индекс = Параметры.Показатели.Индекс(ОписаниеПоказателя);
		Если ПустаяСтрока(ОписаниеПоказателя.Ресурс) Тогда
			Продолжить;
		КонецЕсли; 
		// Вызов процедуры формирования запроса для расчета показателя
		ПараметрыВызова = Новый Структура;
		ПараметрыВызова.Вставить("Запрос", Запрос);
		ПараметрыВызова.Вставить("ОписаниеПоказателя", ОписаниеПоказателя);
		ПараметрыВызова.Вставить("Индекс", Индекс);
		ПараметрыВызова.Вставить("Параметры", Параметры);
		СтрокаВызова = СтрШаблон("Обработки.РезультатРаботы.Подключаемый_%1Расчет(Параметры.Запрос, Параметры.ОписаниеПоказателя, Параметры.Индекс, Параметры.Параметры)",
		ОписаниеПоказателя.Показатель);
		ОбщегоНазначения.ВыполнитьВБезопасномРежиме(СтрокаВызова, ПараметрыВызова);
		Если Индекс%50=0 И НЕ ПустаяСтрока(Запрос.Текст) Тогда
			ВыполнитьЗапросПоказатели(Запрос, Параметры, Результат);
		КонецЕсли; 
	КонецЦикла; 
	Если НЕ ПустаяСтрока(Запрос.Текст) Тогда
		ВыполнитьЗапросПоказатели(Запрос, Параметры, Результат); 
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

Процедура ВыполнитьЗапросПоказатели(Запрос, Параметры, Результат)
	
	Запрос.УстановитьПараметр("Период", Параметры.Дата.Дата);
	Если ЗначениеЗаполнено(Параметры.ДатаСравнения) Тогда
		Запрос.УстановитьПараметр("ПериодСравнения", Параметры.ДатаСравнения.Дата);
	КонецЕсли; 
	Если ТипЗнч(Параметры.Период)=Тип("СтандартныйПериод") ИЛИ ТипЗнч(Параметры.Период) = Тип("Структура") Тогда
		Запрос.УстановитьПараметр("ДатаНачала", Параметры.Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", Параметры.Период.ДатаОкончания);
	Иначе
		Запрос.УстановитьПараметр("ДатаНачала", '0001-01-01');
		Запрос.УстановитьПараметр("ДатаОкончания", '0001-01-01');
	КонецЕсли; 
	Если ТипЗнч(Параметры.ПериодСравнения)=Тип("СтандартныйПериод") ИЛИ ТипЗнч(Параметры.ПериодСравнения) = Тип("Структура") Тогда
		Запрос.УстановитьПараметр("ДатаНачалаСравнения", Параметры.ПериодСравнения.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончанияСравнения", Параметры.ПериодСравнения.ДатаОкончания);
	КонецЕсли; 
	
	Попытка
		Выборка = Запрос.Выполнить().Выбрать();
	Исключение
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Пульс бизнеса: ошибка расчета показателя'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, , , ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Пока Выборка.Следующий() Цикл
		Стр = Параметры.Показатели[Выборка.Индекс];
		Если Результат.Получить(Выборка.Индекс)=Неопределено Тогда
			Результат.Вставить(Выборка.Индекс, Новый Структура("Значение, ЗначениеСравнения", 0, 0));
		КонецЕсли; 
		СтруктураРезультата = Результат[Выборка.Индекс];
		
		Если Выборка.ДляСравнения Тогда
			Если НЕ Выборка.Разделитель=Неопределено Тогда
				Продолжить;
			КонецЕсли;
			СтруктураРезультата.Вставить("ЗначениеСравнения", ?(Выборка.Значение=Null, 0, Выборка.Значение));
		ИначеЕсли Выборка.Разделитель=Неопределено Тогда
			СтруктураРезультата.Вставить("Значение", ?(Выборка.Значение=Null, 0, Выборка.Значение));
		Иначе
			Если НЕ ТипЗнч(СтруктураРезультата.Значение)=Тип("Соответствие") Тогда
				СтруктураРезультата.Вставить("Значение", Новый Соответствие);
			КонецЕсли; 
			СтруктураРезультата.Значение.Вставить(Выборка.Разделитель, Выборка.Значение);
		КонецЕсли; 
	КонецЦикла; 
	Запрос = Новый Запрос;
	
КонецПроцедуры 

Процедура Подключаемый_ПрибыльРасчет(Запрос, Стр, Индекс, Параметры) Экспорт
	
	Если Стр.Ресурс="СуммаПриход" Тогда
		ТекстРесурса = "СУММА(Рег.СуммаПриход)";
	КонецЕсли; 
	
	Если Стр.Ресурс="СуммаПриход" Тогда
		ТекстЭлемента =  
		"ВЫБРАТЬ
		|	&ДляСравнения КАК ДляСравнения,
		|	&Индекс КАК Индекс,
		|	&Разделитель КАК Разделитель,
		|	&Ресурс КАК Значение
		|ИЗ
		|	РегистрНакопления.БалансУченика.Обороты(, , , ) КАК Рег
		|ГДЕ
		|	&Отборы";
	//Иначе
	//	ТекстЭлемента =  
	//	"ВЫБРАТЬ
	//	|	&ДляСравнения КАК ДляСравнения,
	//	|	&Индекс КАК Индекс,
	//	|	&Разделитель КАК Разделитель,
	//	|	&Ресурс КАК Значение
	//	|ИЗ
	//	|	(ВЫБРАТЬ
	//	|		Рег.Ученик КАК Ученик,
	//	|		Рег.СуммаПриход КАК Сумма
	//	|	ИЗ
	//	|		РегистрНакопления.БалансУченика.Обороты КАК Рег
	//	|	ГДЕ
	//	|		(Рег.Период >= &ДатаНачала
	//	|				ИЛИ &ДатаНачала = ДАТАВРЕМЯ(1, 1, 1))
	//	|		И (Рег.Период <= &ДатаОкончания
	//	|				ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
	//	|		И &Отборы) КАК Рег";
	КонецЕсли; 
	
	ТекстЭлемента = СтрЗаменить(
	ТекстЭлемента,
	"&Ресурс",
	ТекстРесурса);
	ДобавитьЭлементВЗапросПоказатели(Запрос, ТекстЭлемента, Стр, Индекс, Параметры);
	
КонецПроцедуры

Процедура ДобавитьЭлементВЗапросПоказатели(Запрос, ТекстЭлемента, Стр, Индекс, Параметры)
	
	Элемент = ТекстЭлемента;
	Элемент = СтрЗаменить(Элемент, "&ДляСравнения", "ЛОЖЬ");
	ОбработатьЭлементЗапросаПоказатели(Стр, Запрос, Элемент, Индекс);
	
	// Режим сравнения
	//Если (Параметры.ПериодСравнения<>Неопределено И НЕ Стр.Остаток) ИЛИ
	//	(Параметры.ДатаСравнения<>Неопределено И Стр.Остаток) Тогда
	//	Элемент = ТекстЭлемента;
	//	Элемент = СтрЗаменить(Элемент, "&ДляСравнения", "ИСТИНА");
	//	ОбработатьЭлементЗапросаПоказатели(Стр, Запрос, Элемент, Индекс, "Сравнения");
	//КонецЕсли; 
	
КонецПроцедуры 

Процедура ОбработатьЭлементЗапросаПоказатели(Стр, Запрос, Элемент, Индекс, Суффикс = "")
	
	Если НЕ ПустаяСтрока(Суффикс) Тогда
		Элемент = СтрЗаменить(Элемент, "&ДатаНачала", "&ДатаНачала"+Суффикс);
		Элемент = СтрЗаменить(Элемент, "&ДатаОкончания", "&ДатаОкончания"+Суффикс);
		Элемент = СтрЗаменить(Элемент, "&Период", "&Период"+Суффикс);
	КонецЕсли; 
	Элемент = СтрЗаменить(Элемент, "&Индекс", Строка(Индекс));
	Если ТипЗнч(Стр.Настройки)=Тип("ФиксированныйМассив") И Стр.Настройки.Количество()>0 Тогда
		Для каждого Настройка Из Стр.Настройки Цикл
			Если НЕ Настройка.Значение Тогда
				Продолжить;
			КонецЕсли; 
			Если Настройка.Имя="ВРазрезеВалют" Тогда
				Разделитель = "Валюта";
				Элемент = СтрЗаменить(Элемент, "Рег.Сумма", "Рег.СуммаВал");
				Элемент = СтрЗаменить(Элемент, "КАК Сумма", "КАК СуммаВал");
			Иначе
				Продолжить;
			КонецЕсли;
			Элемент = СтрЗаменить(Элемент, "&Разделитель", "Рег."+Разделитель);
		КонецЦикла; 
	КонецЕсли;
	Элемент = СтрЗаменить(Элемент, "&Разделитель", "НЕОПРЕДЕЛЕНО");
	//Если ТипЗнч(Стр.Фильтры)=Тип("ФиксированныйМассив") И Стр.Фильтры.Количество()>0 Тогда
		Отборы = "";
	//	Для каждого Фильтр Из Стр.Фильтры Цикл
	//		ИмяПараметра = "Значение"+СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", "");
	//		ТекстФильтра = СтрокаОтбора(Фильтр, ИмяПараметра);
	//		Если ПустаяСтрока(ТекстФильтра) Тогда
	//			Продолжить;
	//		КонецЕсли; 
	//		Отборы = Отборы+Символы.ПС+?(ПустаяСтрока(Отборы), "", "И ");
	//		Отборы = Отборы+ТекстФильтра;
	//		Запрос.УстановитьПараметр(ИмяПараметра, ?(ТипЗнч(Фильтр.Значение)=Тип("СписокЗначений"), Фильтр.Значение.ВыгрузитьЗначения(), Фильтр.Значение));
	//	КонецЦикла;
	//КонецЕсли;
	Если ПустаяСтрока(Отборы) Тогда
		Отборы = "ИСТИНА";
	КонецЕсли; 
	Элемент = СтрЗаменить(Элемент, "&Отборы", Отборы);
	Если ЗначениеЗаполнено(Разделитель) Тогда
		Группировки = "Рег."+Разделитель;
	Иначе
		Группировки = "НЕОПРЕДЕЛЕНО";
	КонецЕсли;
	Элемент = СтрЗаменить(Элемент, "&Группировки", Группировки);
	Запрос.Текст = Запрос.Текст+?(ПустаяСтрока(Запрос.Текст), "", Символы.ПС+"ОБЪЕДИНИТЬ ВСЕ"+Символы.ПС);
	Запрос.Текст = Запрос.Текст+Элемент;
	
КонецПроцедуры

Функция СтрокаОтбора(Фильтр, ИмяПараметра)
	
	Если Найти(Фильтр.Поле, "DataParameters.")>0 Тогда
		Возврат "";
	КонецЕсли;
	
	Результат = "";
	Если Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВИерархии
		ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСписке
		ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии
		ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеНачинаетсяС
		ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеПодобно
		ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеРавно
		ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеЗаполнено
		ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеСодержит Тогда
		Результат = Результат+"НЕ ";
	КонецЕсли;
	
	Если Фильтр.Поле="РозничныеПродажи" Тогда
		
		Результат = Результат+"(Рег.Документ ССЫЛКА Документ.ОтчетОРозничныхПродажах ИЛИ Рег.Документ ССЫЛКА Документ.ЧекККМ)";
		
	ИначеЕсли Найти(Фильтр.Поле, "[")>0 Тогда 
		
		Позиция = Найти(Фильтр.Поле, "[");
		ПозицияКонца = Найти(Фильтр.Поле, "]");
		ИмяСвойства = СтрЗаменить(Сред(Фильтр.Поле, Позиция+1, ПозицияКонца-Позиция-1), """", """""");
		Путь = Лев(Фильтр.Поле, Позиция-1);
		Результат = Результат+"("+Путь+"ДополнительныеРеквизиты.Свойство В (ВЫБРАТЬ Свойство.Ссылка ИЗ ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК Свойство ГДЕ Свойство.Наименование="""+ИмяСвойства+""") И "+Путь+"ДополнительныеРеквизиты.Значение = &"+ИмяПараметра+")";
		
	Иначе
		
		// Стандартное измерение регистра
		
		ЭтоСвойство = Найти(Фильтр.Поле, "Свойство")>0;
		
		ИмяПоля = "Рег."+Фильтр.Поле;
		Результат = Результат+?(ЭтоСвойство, "(", "")+ИмяПоля;
		
		Если Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВИерархии
			ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.ВИерархии
			ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСпискеПоИерархии
			ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии Тогда
			Результат = Результат+" В ИЕРАРХИИ (&"+ИмяПараметра+")";
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеВСписке
			ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке Тогда
			Результат = Результат+" В (&"+ИмяПараметра+")";
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеНачинаетсяС
			ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НачинаетсяС Тогда
			Результат = Результат+" ПОДОБНО &"+ИмяПараметра+"+""%""";
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеПодобно
			ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.Подобно Тогда
			Результат = Результат+" ПОДОБНО &"+ИмяПараметра;
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеСодержит
			ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.Содержит Тогда
			Результат = Результат+" ПОДОБНО ""%""+&"+ИмяПараметра+"+""%""";
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.НеРавно
			ИЛИ Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно Тогда
			Результат = Результат+" = &"+ИмяПараметра;
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.Больше Тогда 
			Результат = Результат+" > &"+ИмяПараметра;
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда 
			Результат = Результат+" >= &"+ИмяПараметра;
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.Меньше Тогда 
			Результат = Результат+" < &"+ИмяПараметра;
		ИначеЕсли Фильтр.ВидСравнения=ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда 
			Результат = Результат+" <= &"+ИмяПараметра;
		КонецЕсли;
		
		Если ЭтоСвойство Тогда
			Результат = Результат+" ИЛИ "+ИмяПоля+" = НЕОПРЕДЕЛЕНО)";
		КонецЕсли; 
		
	КонецЕсли; 
	
	Возврат Результат;
	
КонецФункции
